name: Export AdventureWorks Tables to CSV

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  export-tables:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up SQL Server
      run: |
        docker pull mcr.microsoft.com/mssql/server:2019-latest
        docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=${{ secrets.SA_PASSWORD }}' -p 1433:1433 -d --name sqlserver mcr.microsoft.com/mssql/server:2019-latest
        # Wait for SQL Server to be fully up and running
        for i in {1..60}; do
          if docker logs sqlserver 2>&1 | grep -q "SQL Server is now ready for client connections"; then
            echo "SQL Server is up and running"
            break
          fi
          echo "Waiting for SQL Server to start... ($i/60)"
          docker ps -a
          docker logs sqlserver
          sleep 5
        done
        if [ $i -eq 60 ]; then
          echo "SQL Server failed to start in time"
          docker ps -a
          docker logs sqlserver
          exit 1
        fi

    - name: Restore AdventureWorks Database
      run: |
        docker cp $(pwd)/AdventureWorks.bak sqlserver:/AdventureWorks.bak
        docker exec sqlserver /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ${{ secrets.SA_PASSWORD }} -Q "RESTORE DATABASE AdventureWorks FROM DISK = '/AdventureWorks.bak' WITH MOVE 'AdventureWorks_Data' TO '/var/opt/mssql/data/AdventureWorks.mdf', MOVE 'AdventureWorks_Log' TO '/var/opt/mssql/data/AdventureWorks_log.ldf';"
      env:
        SA_PASSWORD: ${{ secrets.SA_PASSWORD }}

    - name: Export Tables to CSV
      run: |
        mkdir -p csv_exports
        docker
